[2024-06-21 00:21:01,473][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 00:21:01,475][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 00:21:09,407][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:09,840][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:09,852][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:09,852][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:09,854][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 00:21:09,860][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:09,863][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 00:21:09,868][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 00:21:09,868][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 00:21:10,212][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:10,216][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:10,220][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:21:10,809][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 00:21:10,810][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 00:21:10,815][test_login.py 34][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 00:21:10,815][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 00:21:10,816][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 00:21:10,816][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 00:21:10,816][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 00:21:10,816][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 00:21:10,817][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 00:21:10,818][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 00:21:10,818][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 00:21:10,818][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 00:21:25,036][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"498ea23c21134c87b0c03a025bf9ccf8"}
[2024-06-21 00:21:25,038][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 00:21:25,038][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 00:21:25,038][test_login.py 36][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 00:21:25,039][test_login.py 41][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "498ea23c21134c87b0c03a025bf9ccf8"
}
[2024-06-21 00:21:25,041][test_login.py 42][INFO]: except_result数据为：操作成功
[2024-06-21 00:21:25,041][test_login.py 45][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 00:21:25,049][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 00:32:29,274][flatform.py 87][INFO]: [{'id': 'c287d1a6-c7fc-49e2-a25c-1abb784f79c9', 'caseNo': 'test_01', 'templateName': '登录模块', 'caseName': '获取验证码', 'type': 'get', 'address': '/captchaImage', 'params': '{}', 'success': False, 'status': 200, 'content': '操作成功', 'notEmpty': 'NONE', 'LAY_NUM': 1, 'LAY_INDEX': 0}]
[2024-06-21 00:32:29,313][flatform.py 98][INFO]: 解析后的数据==>> [['test_01:', ['登录模块', '获取验证码', 'get', '/captchaImage', {}, False, 200, '操作成功']]]
[2024-06-21 00:32:29,314][flatform.py 176][INFO]: Test script generated successfully==>testcase/test_api0.py
[2024-06-21 00:32:29,315][flatform.py 128][INFO]: 用例写入yaml文件完成！
[2024-06-21 00:32:48,274][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 00:32:48,275][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 00:32:53,081][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:32:53,337][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:32:53,356][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:32:53,359][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 00:32:53,362][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, False, 200, '操作成功']]}
[2024-06-21 00:42:44,652][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 00:42:44,652][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 00:42:50,329][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:42:50,659][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:42:50,665][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:42:50,666][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 00:42:50,668][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 201, '操作成功']]}
[2024-06-21 00:42:50,824][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:42:50,827][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:42:50,830][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:42:51,466][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 00:42:51,466][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 00:42:51,470][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 00:42:51,472][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 00:42:51,473][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 00:42:51,473][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 00:42:51,473][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 00:42:51,473][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 00:42:51,473][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 00:42:51,474][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 00:42:51,474][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 00:42:51,474][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 00:43:00,989][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"931cae33280349e0b1b83b394f81a965"}
[2024-06-21 00:43:00,990][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 00:43:00,991][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 00:43:00,998][test_login.py 37][INFO]: 状态码 ==>> 期望结果：201， 实际结果：【 200 】
[2024-06-21 00:43:00,999][test_login.py 39][INFO]: 状态码断言失败1，预期201，实际200
[2024-06-21 00:43:01,189][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 00:43:01,615][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 00:43:01,617][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 00:43:01,625][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 00:43:01,627][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 00:43:01,627][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 00:43:01,627][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 00:43:01,627][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 00:43:01,627][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 00:43:01,627][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 00:43:01,628][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 00:43:01,628][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 00:43:01,628][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 00:43:03,999][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"278a7f24b6c840c982547cb7af9285ba"}
[2024-06-21 00:43:04,009][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 00:43:04,009][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 00:43:04,010][test_login.py 37][INFO]: 状态码 ==>> 期望结果：201， 实际结果：【 200 】
[2024-06-21 00:43:04,010][test_login.py 39][INFO]: 状态码断言失败1，预期201，实际200
[2024-06-21 00:43:04,031][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 00:43:04,791][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 00:43:04,793][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 00:43:04,794][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 00:43:04,795][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 00:43:04,796][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 13.361s"
}
[2024-06-21 00:43:04,797][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 00:43:04,798][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 00:43:04,799][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 00:45:50,342][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:45:50,343][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:45:50,344][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:46:37,795][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:46:37,797][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:46:37,798][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:46:55,504][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:46:55,505][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:46:55,506][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:47:36,778][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:47:36,782][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:47:36,784][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:48:00,374][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:48:00,377][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:48:00,379][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:48:09,706][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:48:09,709][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 00:48:09,711][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 01:33:59,664][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 01:33:59,835][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 01:33:59,842][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 01:33:59,843][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 01:33:59,845][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 201, '操作成功']]}
[2024-06-21 01:33:59,965][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 01:33:59,966][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 01:33:59,967][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:23,445][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 09:38:23,446][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 09:38:26,099][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:26,301][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:26,309][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:26,310][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 09:38:26,317][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 201, '操作成功']]}
[2024-06-21 09:38:28,992][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:29,190][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:29,787][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:29,949][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:30,582][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:30,821][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:31,394][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:31,566][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:32,415][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:32,788][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:33,688][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:34,271][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:35,134][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:35,351][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:36,455][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:36,798][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:37,559][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:37,962][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:37,976][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:37,979][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 09:38:37,983][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 201, '操作成功']]}
[2024-06-21 09:38:38,091][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:38,501][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:39,622][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:40,082][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:41,377][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:41,820][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:42,955][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:43,604][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:44,442][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:44,920][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:44,938][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:45,803][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:46,617][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:46,695][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:47,134][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:47,257][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:48,656][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:49,050][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:49,233][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:49,507][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:50,482][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:51,174][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:51,199][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:51,725][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:52,989][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:53,637][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:54,075][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:54,511][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:54,909][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:55,362][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:55,886][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:56,290][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:57,259][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:57,585][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:57,998][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:58,081][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:58,958][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:59,341][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:38:59,384][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:00,524][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:01,706][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:02,017][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:02,813][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:03,161][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:04,045][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:04,311][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:05,204][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:05,472][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:06,535][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:06,811][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:07,746][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:08,049][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:08,983][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:09,291][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:10,267][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:10,595][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:11,815][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:12,130][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:12,961][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:13,243][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:14,015][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:14,361][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:15,208][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 09:39:15,455][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:29,844][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:40:29,845][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:40:32,370][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:32,547][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:32,552][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:32,553][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:40:32,555][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 201, '操作成功']]}
[2024-06-21 19:40:35,445][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:35,689][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:36,509][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:36,722][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:37,333][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:37,512][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:38,131][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:38,317][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:38,928][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:39,121][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:39,704][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:39,878][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:40,498][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:40,691][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:41,276][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:41,463][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:42,232][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:42,458][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:43,079][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:43,379][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:43,936][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:44,108][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:44,695][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:44,858][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:45,457][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:45,643][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:46,257][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:46,465][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:46,989][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:47,206][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:48,109][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:48,407][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:49,839][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:50,114][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:50,870][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:51,060][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:51,599][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:51,770][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:52,264][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:40:52,450][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:46,408][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:41:46,409][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:41:46,410][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:41:46,410][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:41:49,060][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:49,061][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:49,219][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:49,221][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:49,225][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:49,225][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:49,226][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:41:49,227][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:41:49,228][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:41:49,230][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:41:53,139][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:53,358][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:53,999][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:54,202][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:54,919][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:55,102][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:55,732][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:55,923][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:56,576][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:56,747][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:57,554][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:57,920][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:58,850][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:59,090][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:41:59,842][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:00,106][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:00,872][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:01,175][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:02,033][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:02,262][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:03,106][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:03,350][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:04,193][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:04,417][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:05,429][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:05,678][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:06,485][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:06,703][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:07,504][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:07,740][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:08,687][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:08,990][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:09,921][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:10,147][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:10,946][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:11,213][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:11,963][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:12,295][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:13,068][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:13,222][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:34,609][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:42:34,611][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:42:34,615][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:42:34,616][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:42:34,617][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:42:34,617][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:42:37,898][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:37,969][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:37,970][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,137][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,144][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,146][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:42:38,148][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:42:38,209][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,213][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,216][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,219][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:42:38,222][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:42:38,224][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:42:38,226][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:42:38,300][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,301][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,303][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,374][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,376][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,379][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,387][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,389][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:42:38,390][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:55,713][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:43:55,713][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:43:55,718][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:43:55,721][yaml_util1.py 83][ERROR]: name 'file_path' is not defined
[2024-06-21 19:43:55,722][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:43:55,725][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:43:55,726][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:43:58,003][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:43:58,008][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:43:58,016][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:43:58,016][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:43:58,016][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:43:58,017][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:43:58,451][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,461][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,468][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,706][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,706][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,712][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,713][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,714][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,715][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:43:58,715][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:43:58,718][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:43:58,718][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:43:58,719][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,721][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:43:58,723][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:43:58,861][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,862][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,862][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,863][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,863][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,863][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,864][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,864][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:58,865][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:43:59,247][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:43:59,248][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:43:59,249][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:43:59,249][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:43:59,250][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:43:59,250][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:43:59,252][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:43:59,253][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:43:59,253][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:43:59,253][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:43:59,253][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:43:59,254][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:43:59,254][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:43:59,254][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:43:59,254][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:43:59,254][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:43:59,254][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:43:59,254][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:43:59,254][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:43:59,255][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:43:59,255][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:43:59,255][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:43:59,255][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:43:59,255][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:43:59,255][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:43:59,255][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:43:59,256][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:43:59,256][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:43:59,256][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:43:59,256][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:43:59,257][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:43:59,257][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:43:59,257][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:01,431][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:01,689][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:01,696][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:01,698][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:01,700][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:01,860][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:01,862][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:01,864][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:01,908][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:01,983][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,134][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,138][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,140][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:02,145][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:02,190][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:02,190][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:02,193][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:02,194][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:02,194][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:02,195][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:02,195][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:02,195][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:02,196][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:02,196][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:02,196][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:02,196][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:02,212][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,217][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,218][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:02,220][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:02,264][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,265][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,267][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,331][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,332][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,333][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:02,564][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:02,565][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:02,568][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:02,569][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:02,570][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:02,570][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:02,570][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:02,570][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:02,571][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:02,571][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:02,571][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:02,571][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:02,641][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:02,641][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:02,645][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:02,646][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:02,646][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:02,647][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:02,647][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:02,648][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:02,648][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:02,648][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:02,649][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:02,649][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:10,753][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"f078c55939d64de093e07d3237aeb640"}
[2024-06-21 19:44:10,753][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:10,754][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:10,754][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:10,754][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "f078c55939d64de093e07d3237aeb640"
}
[2024-06-21 19:44:10,756][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:10,756][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:10,757][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"d533cfacebd14fafbc7f4cd8937ab5b1"}
[2024-06-21 19:44:10,758][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:10,758][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:10,759][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:10,759][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "d533cfacebd14fafbc7f4cd8937ab5b1"
}
[2024-06-21 19:44:10,760][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:10,760][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:10,761][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:10,769][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:10,924][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"e7857a351d694bc282bfb6979b9c0774"}
[2024-06-21 19:44:10,924][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:10,925][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:10,925][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:10,925][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "e7857a351d694bc282bfb6979b9c0774"
}
[2024-06-21 19:44:10,927][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:10,927][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:10,936][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:11,132][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"8aa734e8f1f34deab0206d1d420d82a4"}
[2024-06-21 19:44:11,133][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:11,133][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:11,133][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:11,135][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "8aa734e8f1f34deab0206d1d420d82a4"
}
[2024-06-21 19:44:11,136][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:11,136][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:11,152][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:14,271][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"2cd25ca2f9e540a9b109531cc4d21dc7"}
[2024-06-21 19:44:14,272][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:14,277][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:14,277][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:14,277][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "2cd25ca2f9e540a9b109531cc4d21dc7"
}
[2024-06-21 19:44:14,279][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:14,279][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:14,289][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:18,820][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAA8AKADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDtrW1ga1hZoIySikkoOeKsCztv+feL/vgU2z/484P+ua/yqyKiMY8q0IjGPKtCIWdr/wA+0P8A3wKeLK1/59of+/YqUU4U+WPYfLHsRCytP+fWH/v2KcLG0/59YP8Av2Kzdc8T6X4dtvO1C5CE/ciXl3+g/r0ql4R8ZReK1u5IrN7eOB1VS7gl8gnoOnbuetdCwVV0XX5PcXXp/wAEVoXsdELCz/59YP8Av2KcLCz/AOfSD/v2KmXmniuflj2Hyx7EI0+y/wCfS3/79j/CnDTrL/nzt/8Av0v+FTFgoJJAA7muP8RfEzQtAJiSX7ddf88rdgQv+83Qfqfat8PhKmInyUYcz8kJqC1Z1o06x/587f8A79L/AIU4abY/8+Vv/wB+l/wrlvCPxD0zxU7W6I1reKN3kyMDuHqDxmuzU5oxGEnh6jp1oWkgSi1dFcaZYf8APlbf9+l/wp40yw/58bb/AL9L/hVgU8cVhyx7D5Y9isNL0/8A58bb/vyv+FPGlaf/AM+Fr/35X/CsDxV460nwikQvWeSeUExwxDLEep9BUnhfx3oviqMixnKXC/ft5htce49R9K6fqFb2P1j2b5O9tBe5exujStO/58LX/vyv+FOGk6d/0D7X/vyv+FWlOaeK5uWPYfLHsVRpOm/9A+0/78r/AIVW1PS9Pj0i9dLG1V1gcqwhUEHaeRxWsKq6t/yBb/8A695P/QTSlGPK9BSjHlehyVn/AMecH/XNf5VZFV7P/jzg/wCua/yqyKcfhQ4/ChwqOeURRliegqUVmay5Wzkx12mqKPCvF+pSa74jvZi5McA2xj2B/wD1mug+FOqCC+urBmwZNsij1xwf5iuQTYup3vnOEAZslvrVe0v30vVor6xYhoX3Lnv6g+x6V+jVKEsVQnlsY2ioxcXbS9r2b8/8zjT5Wpn1GsgEYY+lcRYeObxviNc6DfxQwWoVlt9ucu3DKST6rngd+Ku2fiZNV8L/ANoaeiyymMkQs+0hwOUJ7H/61eO6rLr2qX39r3Ef2eeIBogo2MoByMd+OvNfKZZgac51IYlqOnL7zs1Lpp8tTonJqzifQOrMJ9OnhJ+WWNkOPQjFeR2fhq00CEyzJHNOB80sg+Vfpnp9aTRfixcQ2wg1q0N1gYE8OFY/Veh/DH0rotSh0vxj4XS4gLCKQ71IxvicdQffqPx+lVUweOy29Ks3CnJpNrVPf/g6aCUoz1W55lqd4uneIYtQ0uRY3QhwYzwG7/ga9/0DxZZX/hiLWLiZIIRHumZ2wEI4I/P+lfPeq6E1lMVgZpFHZhzXQ+FPFen6XpMuj6hFL5UxYSbhlcMMEEda9nH4ehj8DTlhZOpKno/5uXzX5GcG4SfNpc9Sg+LvhOa/+zfap40JwJ3hIjP9R+IFdrHdw3Nus0EqSxuMq6MCGHqCK8C1NPC1pJHYT6csMciBo7hAcEHuHBJP41Ug8KXT/uNP15k0+XkrubkH2Bw36V488FgJxUoylST251dNeTj17o0UprzPTfE2j22oavDqU0ImkhiMaBhlcE5zXnHirT/7Klj1rS/9CuonG8Q/KD7gfz9a9K8L6loYjt/DcWrC9vLaDHz8kgdsgY49MkgDnoTXJ/FLTpUshLb52If3ij09aMsq16GOp0pSai3bW6Ti32fR9PMJpOLZ6J8PPFD+JfDUFzcYFyhMcuOhYdx9Riu0WvHPg5dQHRPIhYeYkh81c8gnofy/lXsUfKivPzOlGljKtOCslJ2X9fgXB3imSCqurf8AIEv/APr2k/8AQTVsVV1f/kCX/wD17Sf+gmvPl8LCXws5Kz/48oP+ua/yqyKr2X/HlB/1zX+VWRRH4UEfhQ4Vn6pCZbZgPStEUPGHXBqijwbxF4ZaXVWnj+QN/rAB1PqKxZ9BKdFdR6nmvfbjQoZ33FRVG88LwPCQEGcelelHOMdCMIRqtKO3/B7/ADI9nHsfPytc20xtRcPCpcbsMQv1OK9STRJ7iwjkkkEsoQbpFGAx9ahn8FRtqSyPAHwe44/KvRdK0wJZrGyjgYxiunNs2WYQp+7aS+LbV6bdRU6fJc8NvLSXQNXW7FsJbV2xLEU3D8j+Yr12xggvtEVAg+zyR/KFG35SO2OlWrrw+rXG9V71sW2n7bbZjtXDicbLEQgpr3oq1+66X81tfsUo2bPEdUh1Dw9evHqSPe6eW/d3IwWA9/f6/hWDrd5Y3whSzQvLn723Bx6V7XrOjNIrqUDo3VSMg1ytp4Ohju98VoqNnrjNenhc2w1KaxE6T9rH+V2i/VfnbciVNtWvoZ1joa3vhq2s9Qh3tGvBz8yfQ1iP4OvY5TFb6gVtmPIbIOPoODXtmmeHkW2Csvapm8MRNJnaK4qWcYulKUoSspNu1k1d9k72KdOL3OK8GeEtM02WOYWxmulORPIfmB9h0FdV4h0k3lucruBHII610VjpEdsBhavT2qyRFSK4q+Iq15+0qycn3ZSSSsjwiymvvBXiS0g0fRfPiuW3SlAzySKDyoP8OMg/lk9a9/tJRLErDOCM81zL6My3O5RjmujsYjHEAa0xOK+sKLkveS1d23LzdxRjYuiqur/8gS//AOvaT/0E1bFVdX/5Al//ANe0n/oJrjl8LCXws5Ky/wCPK3/65r/KrIrmYtauYokjVIiEUKMg9vxqT+37r/nnD/3yf8ayjWjZGcasbI6UU4VzP/CQ3f8Azzg/75P+NL/wkV3/AM84P++T/jVe2iP20TqAKdtBGMVy3/CSXn/PKD/vk/40v/CS3n/PKD/vk/40e2iHtonRGyjZs7RmrUcYQYArlP8AhJ73/nlb/wDfLf40v/CUXv8Azyt/++W/xo9tEPbROt8sHtT1QCuQ/wCEqvv+eVv/AN8t/jS/8JXff88rb/vlv8aPbRD20TrXtkkHIFMj0+JWyFFct/wlt/8A88bb/vlv8aX/AIS/UP8Anjbf98t/8VR7aIe2idokYUYAqUAVw/8AwmGof88bX/vlv/iqX/hMtR/542v/AHy3/wAVR7aIe2id0BTgK4T/AITPUf8Anja/98N/8VS/8JrqX/PC0/74b/4qj20Q9tE7vywT0qRVArgf+E21L/nhaf8AfDf/ABVL/wAJxqf/ADwtP++G/wDiqPbRD20T0EVV1f8A5Aeof9e0n/oJriv+E51P/nhaf98N/wDFVHc+M9RurWa3eG1CSoyMVVsgEY4+aplWjZilVjZn/9k=","code":200,"uuid":"d2914b2fcd454b6ca245dc9d4bd35aab"}
[2024-06-21 19:44:18,826][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:18,827][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:18,828][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:18,829][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "d2914b2fcd454b6ca245dc9d4bd35aab"
}
[2024-06-21 19:44:18,839][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:18,839][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:18,854][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:20,204][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:44:20,205][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:20,220][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:44:20,221][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:21,316][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:44:21,317][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:21,317][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:44:21,317][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:23,563][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:44:23,563][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:27,323][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:27,673][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:27,759][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:27,789][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:27,792][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:27,797][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:28,122][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,124][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,126][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,224][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,234][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,236][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:28,240][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:28,433][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,438][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,440][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:28,483][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:44:28,483][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:28,741][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:28,742][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:28,748][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:28,749][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:28,750][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:28,750][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:28,751][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:28,751][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:28,752][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:28,752][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:28,752][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:28,752][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:29,069][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:29,070][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:29,075][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:29,076][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:29,077][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:29,077][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:29,078][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:29,078][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:29,079][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:29,079][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:29,079][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:29,080][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:29,146][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,174][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,533][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,544][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,550][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,554][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,558][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:29,558][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:29,561][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:29,561][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:29,755][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,765][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,767][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,775][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,778][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:29,780][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:30,307][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:30,308][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:30,313][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:30,315][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:30,316][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:30,316][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:30,317][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:30,317][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:30,318][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:30,318][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:30,318][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:30,319][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:30,328][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:30,329][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:30,332][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:30,333][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:30,334][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:30,334][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:30,336][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:30,336][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:30,337][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:30,337][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:30,337][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:30,338][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:30,827][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:31,081][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:31,095][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:31,097][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:31,101][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:31,324][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:31,326][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:31,328][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:31,634][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:31,393][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"6f159f019d88480bb473b1fbd7e0744f"}
[2024-06-21 19:44:31,665][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:31,665][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:31,665][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:31,665][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:31,666][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "6f159f019d88480bb473b1fbd7e0744f"
}
[2024-06-21 19:44:31,668][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:31,668][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:31,669][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:31,671][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:31,672][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:31,672][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:31,673][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:31,673][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:31,673][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:31,674][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:31,674][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:31,674][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:31,680][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:31,779][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"c8b2670dec6d46b29f3b01892e1a9a5a"}
[2024-06-21 19:44:31,783][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:31,784][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:31,784][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:31,785][test_login.py 42][INFO]: {
  "code": 200,
  "img": "/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAA8AKADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDtrW1ga1hZoIySikkoOeKsCztv+feL/vgU2z/484P+ua/yqyKiMY8q0IjGPKtCIWdr/wA+0P8A3wKeLK1/59of+/YqUU4U+WPYfLHsRCytP+fWH/v2KcLG0/59YP8Av2Kzdd8S6b4csjc382P7kS8vIfRR/kVU8IeMYPFltcSxWktsYXCEOwYHPPBH610LBVXReIUPcWl+grQvY6AWFn/z6wf9+xThYWf/AD6Qf9+xUy08Vz8sew+WPYhGn2X/AD6W/wD37H+FOGnWX/Pnb/8Afpf8KnHFYXibxfpvhWzWa9ctJIcRwpyz+v0HvWlLDyrTVOnG7fQGopXaNkadY/8APnb/APfpf8KcNNsf+fK3/wC/S/4Vj6B4x0fxDYfarW6RCP8AWRSsFeM+4/r0roI3WRFdGDKwyCO4oqUJUpOFSNmu6BRi9kQjTLD/AJ8rb/v0v+FPGmWH/Pjbf9+l/wAKsCnis+WPYOWPYrDS9P8A+fG2/wC/K/4U8aVp/wDz4Wv/AH5X/CqOteJtJ8OpA+qXa26zvsjJBOT+Haor7xnoGnacL6fVLcwMMqUcMW+gHNbRwtSSTjBu+i039BWgao0rTv8Anwtf+/K/4U4aTp3/AED7X/vyv+FN0vU7bVtPgvrR98Ey7kNXxWcqai3GS1Q+WPYqjSdN/wCgfaf9+V/wqtqel6fHpF66WNqrrA5VhCoIO08jitYVV1b/AJAt/wD9e8n/AKCaiUY8r0FKMeV6HJWf/HnB/wBc1/lVkVXs/wDjzg/65r/KrIpx+FDj8KF6VynjTxjH4ZskEaiS6myI09B6munnfZGTXgvjS/Go+NJluXKQw4jXI6cZ/UmvZyXBwxWJ/eq8YpyaW7t0+8mpJxWhiaxqd9rV0dQv5S7udqg9AB2HtXpfwql8vSXRf4p2Y/kB/SvO9XtDFbxyL9wHAx6Gu0+FuoQpHPatIomV94UnkqQOR+P9K9/McT9dyb2lKNoxnay6JbfmjKEeWpZnrd9eGy0y5uVwWihZwD0JAJrK8G+L4PFmlm4WFoJ4mCTRnkBsZyp7ivOfFus+KNT1K7gtSbOwtmMagNjzvck9cjt0HSuc8J+LLzwzFe2trama5uGURKeisMjkDk9uK8vD5L7bBzlCUZVPdaSeye9+nZ+Vi3UtLyPePEevQ6DpE19L8wQcKO5rwsa+ms65PruuHzEjwkEHUD0AHt1+prb1mfWrjwRcxa1L5t4ZvOB3A4XjjjgY+bgcVwujxRTalHHMoZOTtPQmvRyjB0KWDxFVyvKN03HflST9312uTUk3JI68+HrPX54r3SZlgjlYCaNchSM88dj7V7QfEWn6e9lDfXKwNdsUhL8KWGOM9B14zXgN4154YvBc6bKY7eb+E8gN6V2L31h4w8FwNqxEUqOUEynHlydAfTByOD6+uK4sbh51adGvUqOdDZP7Sv0a62t36ehUXZtJanquu+J9K8N2P2vUrkRoThFAy7n0Ud6Tw/4r0nxPYtc6Zcb9hxJGw2vGe2R/XpXhH9kWekyC78QXpvVjGyGIljnHTqc/h0rZ8O6dp+oa/Za14euRaNDMv2m25AK55GO2R26H2xXNPAYNUHKM5P8Av8r5L/y9/n36D5pXO88aaNZa1NDLqETTLAjLGm4gAtjJ478CvEvEeiQ6XdItrI7rI2Fjbkj/ABr6Pvoo57Ms3cda8BsGk1nx15V7w0buET0K9v8APpXTkGLxVLnmp/u6cW3Hvva3bXdiqxi7Lqz2v4dI9l4YsbFjkxJz9SSf613S9K5zw3Y/Z7VOO1dKor5yrUlVm6kt27/eapWVhwqrq3/IEv8A/r2k/wDQTVsVV1f/AJAl/wD9e0n/AKCayl8LFL4WclZ/8eUH/XNf5VZFV7L/AI8oP+ua/wAqsiiPwoI/CiveKWgYCvIvFHhyO61CW4ZXWRhjcvt3xXsxUMMGsy90eK5ByorooYirh5+0oycX5DaT0Z88y6PdxkpK37tPukHP5DtVKGOdLmNYy0UpbCNnbz9a9zuvB8cgPy1gy+B0abbJEGQnoa+hw3FGJhJ+2ScWtkrW8/n1vv5GLoR6Eltpt5eaJb/ayGuFjAcqc5I759fX3rjH0u703xZbPDA7rK/O0dOzfzzXtel6WIrQIw7Y5qKTQVN1vC968XDY2VCpOaSammmuln/k9jVxukc3f6K8+mnIzleRXmE/hu8hvT9nYKQcrk4Ir6Nj09Tb7CO1YGo+F0di6rzVYHMsRgZN0XvunqmEoKW54nqmrm40xrK8haO9jYA8cHHeun8NaQZvCktlcqQLgEnjlc9D9Rwa273wglxdo8tursh4Yj/Oa7HR9ACW4DLXZic1hLDRoYeHJ73M9dL/AN3supKg73Z5LZ+DHjud+oTG6CcIgzjHvn+VWLjwU89ysul3BsZG+V1yQpHtjkfTp9K9mTw9DuyVFSf2BEHBCisP7Zx3tfa8+u1tLW/w7fgP2cbWsU7OCWLQLe2eVppIoVRpSMFyBjOPevIvEEf/AAjviiK+tNNa4vbmXKEksN2fmCqP4jn9a98islSHZjtWFeaIHu1k8sEqcqSOn0rnwmL9hVc5K6d01e179Hbpfp8hyjdG9oziSyicKy7lB2sMEex961hWdpsDRRAGtIVxlDhVXV/+QJf/APXtJ/6Catiqur/8gS//AOvaT/0E1MvhZMvhZyVl/wAeVv8A9c1/lVkVzMWtXMUSRqkRCKFGQe341J/b91/zzh/75P8AjWUa0bIzjVjZHSinAVzP/CQ3f/POD/vk/wCNL/wkV3/zzg/75P8AjVe2iP20Tp9gPamm2QnO0Vzf/CSXn/PKD/vk/wCNL/wkt5/zyg/75P8AjR7aIe2idSkYUYAqQIM9K5P/AISe9/55W/8A3y3+NL/wlF7/AM8rf/vlv8aPbRD20Tr1GKUoGHIrkP8AhKr7/nlb/wDfLf40v/CV33/PK2/75b/Gj20Q9tE6k2UbNnaKsxxKgwBXHf8ACW3/APzxtv8Avlv8aX/hL9Q/5423/fLf/FUe2iHtonbAU8CuH/4TDUP+eNr/AN8t/wDFUv8AwmWo/wDPG1/75b/4qj20Q9tE7oCk8pSeRXD/APCZ6j/zxtf++G/+Kpf+E11L/nhaf98N/wDFUe2iHtoneKoHSpBXAf8ACbal/wA8LT/vhv8A4ql/4TjU/wDnhaf98N/8VR7aIe2iegiqur/8gPUP+vaT/wBBNcV/wnOp/wDPC0/74b/4qo7nxnqN1azW7w2oSVGRiqtkAjHHzVMq0bMUqsbM/9k=",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "c8b2670dec6d46b29f3b01892e1a9a5a"
}
[2024-06-21 19:44:31,787][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:31,788][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:31,798][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:32,886][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"7e2d69d3a22e459697ad3c69e1d8a937"}
[2024-06-21 19:44:32,890][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:32,891][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:32,891][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:32,892][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "7e2d69d3a22e459697ad3c69e1d8a937"
}
[2024-06-21 19:44:32,894][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:32,895][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:32,925][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:33,288][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:33,669][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:33,674][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:33,675][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:33,678][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:33,866][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:33,869][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:33,871][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:34,194][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAA8AKADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDtrW1ga1hZoIySikkoOeKsCztv+feL/vgU2z/484P+ua/yqyKiMY8q0IjGPKtCIWdr/wA+0P8A3wKeLK1/59of+/YqUU4U+WPYfLHsRCytP+fWH/v2KcLG0/59YP8Av2Koa14i03w/Z/adQn2L0VQMs59AKreHPGWk+Jlf7DKyyp96GUBXx64yciuhYOq6TrKD5F1toK0L2NsWFn/z6wf9+xThYWf/AD6Qf9+xUy80/OK5+WPYfLHsQjT7L/n0t/8Av2P8KcNOsv8Anzt/+/S/4VgT+PfD1prEul3N8ILiI7XMqFVB+p4/HpW1p2tabqryrp99BdGHHmGFw4XPTkcdjW88JUpxUpwaT1vboxJQZYGnWP8Az52//fpf8KcNNsf+fK3/AO/S/wCFWBThWHLHsPlj2K40yw/58rb/AL9L/hTxplh/z423/fpf8KsCh5UiUs7BVAySTjFHJHsHLHsQjS9P/wCfG2/78r/hTxpWn/8APha/9+V/wrj3+LHhePWRp32mVvm2m5Cfugfck5/HGK7iGVJUV0YMrDIIOQRXRWwdWgk6sHG+10JKD2IRpWnf8+Fr/wB+V/wpw0nTv+gfa/8Aflf8KtCniuflj2Hyx7FUaTpv/QPtP+/K/wCFVtT0vT49IvXSxtVdYHKsIVBB2nkcVrCqurf8gW//AOveT/0E0pRjyvQUox5XoclZ/wDHnB/1zX+VWRVez/484P8Armv8qsinH4UOPwocKbK2xCaeKbKm9CKoo8P+IqyjxNDfThpbU7QFPIGDkr+NTGzS7WDVvDrpZ3sYynk4VXHoR0z/AJNdh4k0MXW8PGHRuoIrgptN1Dw5M1zpu6W3b/WW7ZJH0/x6/Wvp8JmDr0adGM+WpDRX+CafR9L+uj9TGULNvoz0jwV4+i11zp2oILbVI8gxngPjrgHuO4+tdtK37okV80zG/wBTv5dViRraaPDoVJByvcH14r1fwf46k8QaLNbSvFHq0MZG51yj+j4GO/UCss1yqEI/WMPaytzxTvyN+fYITvoyh4u8P6fqV5JdXFuy3DYDSocE4GBn8K5Lw5q03gHxQTKXfTbkbHIHVc8N9Vz09CfUUt34u8UabfyDWYVni3lcPCEU/wC4wA/rU9re2Hiy1nt5LcwuvzbN24r6MDgV2U6eMwdBxxP7zDNWdne19muqa9LEtxk/d0Z7zZXcV3bRzwyLJHIoZXU5DA8gg1ly+N/DttrT6RcakkF6hAaOZGQAkZHzEBeQRjnnNeR+EPFd34M1M6HqshbTnbMUh6RZP3h/sk9R2OT656vxhomn+INst1EROi7UuIzhgOuD2I+vvjGa8irgaOFrqOIbdOSvGUevZ2fbqtH+uik5LTc73VvE2j6FbCfUr+G3RuVBOWb6KMk/gK5PxDq+j+OPDF1aabqSPuGQVJVkYdNynBx25FeXDw5oujv5urXrTJ/DHgpn8iSfwxSjw7oetyeZpN6bcfxR4L4H0JBH412UsJgKaVWFWej0nye5ftbe5LlJ6W+Vzdi8L6amjCwmtE80r81wB84b1B9PbpVz4e+MNQ0HX08LarIZrZm2W8hOSh/hA/2T6dqt6RqHh6wgttC/tkXF2PkQv83PZdwGB6AE+1ch4mil0LxXaawIzJCkinHuDnFb4OVXE1KmExTclUTcHJNe90cb7X+7oKVklKPQ+l4nDqCKlFYXhjV7fWdIt721k3wyrkHuPUH3B4reFfLSi4txkrNG44VV1b/kCX//AF7Sf+gmrYqrq/8AyBL/AP69pP8A0E1EvhZMvhZyVn/x5Qf9c1/lVkVXsv8Ajyg/65r/ACqyKI/Cgj8KHCnAUgp4qiivcWiTKQRXL6toY2sVFdkBVW9g8yIgCgD53u9T1CSSVYbPAQlWdVJ/Gp/BVvdN4hEyqyoFYOcYzntXpWo+HZJ3IVcAnsKs6H4YNrMGZa97+2oQw88PRoqKkrN3d/6/Iy9ndptlC80We4UhkDo3VWGQadFo5sdLnFtbRRuEZlVY8AtjjIHWvRIrKPywCtV76wBhYIO1eGptK19DU+ctc1pdUtkjubRoL2F+fTHcc8jtxW1pPjfWNP023jutNFzp8ShPNKMrEdvm6cdOnaur1rwq15d+Y0CMw6MUBNX9K8O3EQ2upKnggjgivoZZzhHh44f6veKbdnJ6X35XujH2cr3uYGp+FLDVL5dVKSbJolYwjgE46nHtjp6VjXngmCWQNbSSW47qRvH4ZOa9ss9ERolDoOBjGKlbw5Ax+4K86lm+NotezqtJKyW6t6PT8C3Ti90eTaZ4F0l7fypYZpJT/wAt/MKsp9gOPzBro9V0mVdLYsRNNHFlXkQNlwOGI9c816Bb6FDF0UU6+0tZISqiuetjcRXkpVpuVtddfu7DUUtjz34V+I9eutRu9O1xJRtjEsTSweWeuCOgz1FewocqDXKaZpT28+e1dVCuEApYuvGvWdSEFBPothxVlYlFVdX/AOQJf/8AXtJ/6Catiqur/wDIEv8A/r2k/wDQTXJL4WKXws5Ky/48rf8A65r/ACqyK5mLWrmKJI1SIhFCjIPb8ak/t+6/55w/98n/ABrKNaNkZxqxsjpRThXM/wDCQ3f/ADzg/wC+T/jS/wDCRXf/ADzg/wC+T/jVe2iP20TqBTtoNct/wkl5/wA8oP8Avk/40v8Awkt5/wA8oP8Avk/40e2iHtonT+QhPQVIkSr0Arlf+Envf+eVv/3y3+NL/wAJRe/88rf/AL5b/Gj20Q9tE68ClKBhzXIf8JVff88rf/vlv8aX/hK77/nlbf8AfLf40e2iHtonVGyiY5KipEtY16KK5L/hLb//AJ423/fLf40v/CX6h/zxtv8Avlv/AIqj20Q9tE7VEC9KkArh/wDhMNQ/542v/fLf/FUv/CZaj/zxtf8Avlv/AIqj20Q9tE7oCnbQetcJ/wAJnqP/ADxtf++G/wDiqX/hNdS/54Wn/fDf/FUe2iHtondrGoPSpQK4D/hNtS/54Wn/AHw3/wAVS/8ACcan/wA8LT/vhv8A4qj20Q9tE9BFVdX/AOQHqH/XtJ/6Ca4r/hOdT/54Wn/fDf8AxVR3PjPUbq1mt3htQkqMjFVbIBGOPmqZVo2YpVY2Z//Z","code":200,"uuid":"3157c83e40f242f393b11f79242caf19"}
[2024-06-21 19:44:34,194][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:34,200][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:34,200][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:34,201][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "3157c83e40f242f393b11f79242caf19"
}
[2024-06-21 19:44:34,203][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:34,203][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:34,215][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:34,373][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:34,374][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:34,377][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:34,378][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:34,378][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:34,379][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:34,379][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:34,380][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:34,380][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:34,380][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:34,380][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:34,381][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:35,461][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAA8AKADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDtrW1ga1hZoIySikkoOeKsCztv+feL/vgU2z/484P+ua/yqyKiMY8q0IjGPKtCIWdr/wA+0P8A3wKeLK1/59of+/YqTpXNeJfHOm+F54oLuK5lllXeohUEYzjkkit6GFnXmqdKN5PoDUUrs6MWVp/z6w/9+xThY2n/AD6wf9+xXF6f8V/Dl24SZrm0J7zR5H5qTXUWfiTRb540ttVspXkOFRZ1LE+mM5zWtfLsRQf72k18gXI9rF8WFn/z6wf9+xThYWf/AD6Qf9+xUy808Vycsew+WPYhGn2X/Ppb/wDfsf4U4adZf8+dv/36X/CpsgDmuS1X4m+GdIkeJrxrmZDho7ZC5B+pwv61vQwlTES5aMHJ+SuJqC3OqGnWP/Pnb/8Afpf8KcNNsf8Anyt/+/S/4Utpcpd20U6AhZEDgHqARmrIrDkj2Hyx7FcaZYf8+Vt/36X/AAp40yw/58bb/v0v+FWBTulHLHsHLHsVxpen/wDPjbf9+V/wp40rT/8Anwtf+/K/4VTk8S6JBIY5dWso2HBDzquD6cnrV201Gyvhm1u4Jx6xSBh+lW6DiruOnoHLHsKNK07/AJ8LX/vyv+FOGk6d/wBA+1/78r/hVoU8VHLHsHLHsVRpOm/9A+0/78r/AIVW1PS9Pj0i9dLG1V1gcqwhUEHaeRxWsKq6t/yBb/8A695P/QTSlGPK9BSjHlehyVn/AMecH/XNf5VZFV7P/jzg/wCua/yqyKcfhQ4/ChHztOK4Lxbo9tqc8c11bec8QKqdxGAfoa9AxkVXmsY5vvKDWtOrOlLnpyafdaMbSe54be+HbEA4gkgPqjE/zzXP6ROdO8RWcysVMNypz9Gr3bV9Bia3YqgzivEPEdg2n6qxAIVjkfWvr+Hcxq4ipPCYibkpJ2u7/n5fkYVoJLmSPpOxuBPCreoq6K47wNqo1Hw9az5+bZtb6jg1k+Nte8R+HbldS0u5SfTzgS2s0QYRH1BGG2n68H2PHzNLBTqYh4a6Urta6a9jZySVzpvF+pvp3h6+mjOJFhbaffFfNrRFrYXG4sS5DZ/n/Ou51X4mya3pslpd6aqNIpVpI5eB77SP61ymmyWot5VuZFVc9D3r67LcPjcpws5yp+9zR0VneO2lr9znm41JJXPcPhn4jXWPD0ELuPtFqohlXvwMKfxA/PNd+GGK+WNB1+Xwvr6XthIZYQcSIcjzE7g+/ofX8q9j1qfSfHPhZfLm4I3xTL9+F/cfoR3/ACNeLm+VLD4hVdY0pu97O8b9GtHp27eZrTndW6o7LUvE2i6MpOoanbW5H8DyDcfovU/lXOSfFbwk7GOPVDnsxgkAP47a8mk8M6HpLE6nqTSsOdoIjz+HJNJ5nguT90IdnYPmWrpZfgHG8fa1POMbL8bsTnLyRevPCem3+qXd+l6z2dzK0sJgI6MckZ56HIrJ33XgjxFZ3mm3TvGWDbWONwB5VgOoxXceEdEsFjlWw1IXNo43CEsrlG9QR0+hH/1+b+IOkTWs8F5Eu6OI4cenPBrtwGZVamOWErVOak1y2krdNE+z/UmUEo8yWp9DadeLeW0cy5w6hhn3q+K4j4fa7ba5oUM9u2Co2SRnqjDtXcL0r5OrTlSm6c1ZrQ3TurjhVXVv+QJf/wDXtJ/6Catiqur/APIEv/8Ar2k/9BNYy+Fil8LOSs/+PKD/AK5r/KrIqvZf8eUH/XNf5VZFEfhQR+FDhTxTRTxVFENzEJIiPavGPiPYLCglxgh+K9uIyuK47xNoSaiMSQrIAcgMuea68DifquJhX/ldyZLmTRyvwlunNjdW5J2rLlfxFdrrWnyzISmar+GdGNiAoQKo7AYrshCroARRj8UsViZ11G3M72CMeVWPFNQ8Ml3LGziLevljNc7deFmNwXw0a90Ve9fQ8mmQyDlB+VUZfDlvI2dg/KnQzDFYd3pVGtLA4Re6PnefQWjzjzB7nms2zinOoRRQy+TOZAquSRtbPHI96+iNR8JQSQnbGM49K45fA6f2gHa3RsNnJWvZwPEuIoxnHENzTWl+j/VeRnKintoVb3w0ms21rPqKA3caYdoGwG/Tp39smqb+D9O27fsLD3Dtn+det6boiC3UOvar50KBh9wV40cxxcEowqSilsk2kjTkj1R4O3gGGSTNtezQH0dA/wCoIrtNM0C5ttFjs7q6+2iPKqzR4wn908nP+HFd4fDcO/IUVcTSESHaBV4nNMXiaap1p8yXdK/32v8AiJQjF3R5LputeKfDvjGOForm80TeAyxWwIWNu+VXOV/XHvXulvIJEBFcqNFdLrco7101nGY4wDWWJxEa6jaCi0rO2l/NruNKxcFVdX/5Al//ANe0n/oJq2Kq6v8A8gS//wCvaT/0E1xy+FhL4WclZf8AHlb/APXNf5VZFczFrVzFEkapEQihRkHt+NSf2/df884f++T/AI1lGtGyM41Y2R0opwrmf+Ehu/8AnnB/3yf8aX/hIrv/AJ5wf98n/Gq9tEftonUAU1oVfqK5r/hJLz/nlB/3yf8AGl/4SW8/55Qf98n/ABo9tEPbROnjgVOgqcCuS/4Se9/55W//AHy3+NL/AMJRe/8APK3/AO+W/wAaPbRD20TrxTwK47/hKr7/AJ5W/wD3y3+NL/wld9/zytv++W/xo9tEPbROxKBhgio/sce7O0Vyf/CW3/8Azxtv++W/xpf+Ev1D/njbf98t/wDFUe2iHtonaIgUYAqUCuH/AOEw1D/nja/98t/8VS/8JlqP/PG1/wC+W/8AiqPbRD20TugKcAK4T/hM9R/542v/AHw3/wAVS/8ACa6l/wA8LT/vhv8A4qj20Q9tE7sRr6VKoxXAf8JtqX/PC0/74b/4ql/4TjU/+eFp/wB8N/8AFUe2iHtonoIqrq//ACA9Q/69pP8A0E1xX/Cc6n/zwtP++G/+KqO58Z6jdWs1u8NqElRkYqrZAIxx81TKtGzFKrGzP//Z","code":200,"uuid":"df3885d964584805abcb5ce362e5a824"}
[2024-06-21 19:44:35,461][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:35,462][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:35,467][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:35,468][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "df3885d964584805abcb5ce362e5a824"
}
[2024-06-21 19:44:35,468][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:35,469][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:35,481][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:41,933][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:44:41,933][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:41,982][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:44:41,982][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:44:43,390][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"798bdf26172b40f080fdcfc2f00ec57f"}
[2024-06-21 19:44:43,391][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:43,394][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:43,394][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:43,395][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "798bdf26172b40f080fdcfc2f00ec57f"
}
[2024-06-21 19:44:43,396][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:43,397][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:43,408][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:46,502][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:46,597][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:46,801][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:46,824][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:46,827][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:46,832][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:46,878][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:46,885][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:46,887][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:44:46,892][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:44:47,003][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:47,005][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:47,007][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:47,036][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:47,038][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:47,040][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:44:47,459][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:47,459][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:47,462][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:47,464][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:47,464][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:47,464][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:47,465][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:47,465][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:47,466][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:47,466][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:47,466][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:47,467][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:47,476][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:44:47,477][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:44:47,481][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:44:47,482][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:44:47,483][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 19:44:47,483][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:44:47,484][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:44:47,484][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:44:47,484][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:44:47,485][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:44:47,485][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:44:47,485][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:44:49,721][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"52cd576aa6ff4b3d9fd849f69f32f61f"}
[2024-06-21 19:44:49,721][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:49,724][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:49,724][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:49,724][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "52cd576aa6ff4b3d9fd849f69f32f61f"
}
[2024-06-21 19:44:49,726][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:49,726][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:49,731][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:44:49,746][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"fe4a9401366841059576e6a8ac885971"}
[2024-06-21 19:44:49,746][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:44:49,746][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:44:49,750][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 19:44:49,750][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "fe4a9401366841059576e6a8ac885971"
}
[2024-06-21 19:44:49,750][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 19:44:49,752][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 19:44:49,760][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:01,507][yaml_util1.py 83][ERROR]: name 'file_path' is not defined
[2024-06-21 19:49:01,512][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:49:01,512][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:49:01,512][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:49:01,514][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:49:01,514][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:49:01,515][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:49:01,516][yaml_util1.py 83][ERROR]: name 'file_path' is not defined
[2024-06-21 19:49:01,519][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:49:01,519][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:49:01,528][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:49:01,528][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:49:04,217][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,396][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,402][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,404][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:49:04,406][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:49:04,545][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,547][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,549][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,712][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,731][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,731][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,739][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,830][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:04,831][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:04,834][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:04,835][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:04,835][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:04,835][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:04,836][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:04,836][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:04,836][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:04,836][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:04,837][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:04,837][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:04,927][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,933][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,935][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:49:04,938][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:49:04,968][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,975][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,976][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:04,978][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:49:04,981][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:49:04,987][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,024][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:49:05,032][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:49:05,068][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,080][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,083][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:49:05,088][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:49:05,213][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,215][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,215][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,216][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,218][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,219][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,224][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,226][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,227][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,283][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,286][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,287][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:49:05,651][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:05,652][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:05,652][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:05,653][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:05,655][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:05,656][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:05,656][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:05,656][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:05,657][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:05,657][all_requests.py 53][INFO]: 接口请求方式 ==>> get
://aippt.com/captchaImage
[2024-06-21 19:49:05,657][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:05,657][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:05,658][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:05,658][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:05,658][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:05,658][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:05,658][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:05,658][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:05,658][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:05,659][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:05,659][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:05,659][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:05,659][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:05,660][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:05,660][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:05,665][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:05,667][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:05,667][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:05,667][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:05,668][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:05,668][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:05,669][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:05,669][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:05,669][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:05,677][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:05,709][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:05,710][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:05,716][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:05,717][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:05,718][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:05,718][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:05,719][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:05,719][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:05,719][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:05,722][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:05,723][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:05,723][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:08,663][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:08,666][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:08,666][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:08,843][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:09,002][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:09,002][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:09,004][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:09,005][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:09,005][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:09,006][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:09,006][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:09,006][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:09,006][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:09,006][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:09,006][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:09,007][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:12,810][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:12,815][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:12,815][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:12,837][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:12,841][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:12,842][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:12,906][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:12,912][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:12,913][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:12,919][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:12,922][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:12,922][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:12,923][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:12,925][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:12,925][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:13,006][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,173][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,234][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,244][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,247][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,467][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,468][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:13,474][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:13,475][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:13,475][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:13,475][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:13,475][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:13,475][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:13,475][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:13,476][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:13,476][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:13,476][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:13,540][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,541][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:13,541][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,542][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:13,543][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:49:13,543][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:13,543][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:49:13,543][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:13,543][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:13,544][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:13,544][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:13,544][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:13,544][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:13,544][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:13,544][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:13,544][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:13,544][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:13,545][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:13,545][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:13,545][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:13,545][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:13,545][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:13,545][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:49:13,545][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:13,546][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:13,546][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:13,546][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:13,546][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:49:13,546][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:49:13,547][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:13,547][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:13,547][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:13,547][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:49:13,547][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:13,547][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:13,548][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:13,694][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:49:13,694][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:13,694][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:13,694][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:13,695][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 8.540s"
}
[2024-06-21 19:49:13,695][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:13,695][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:13,695][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:16,054][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:16,082][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:16,082][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:16,238][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:18,685][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:49:18,685][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:18,686][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:18,686][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:18,686][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 12.856s"
}
[2024-06-21 19:49:18,686][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:18,686][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:18,687][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:19,514][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:19,588][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:19,980][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:19,586][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:49:19,995][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:19,995][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:19,995][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:19,988][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:49:19,997][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:49:20,128][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:20,131][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:20,225][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:49:20,792][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:49:20,792][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:20,792][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:20,793][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:20,793][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 15.024s"
}
[2024-06-21 19:49:20,793][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:20,794][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:20,794][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:20,808][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:49:20,809][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:20,809][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:20,810][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:20,810][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 14.989s"
}
[2024-06-21 19:49:20,810][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:20,810][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:20,810][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:49:20,897][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:49:20,897][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:49:20,898][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:49:20,898][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:49:20,898][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 15.108s"
}
[2024-06-21 19:49:20,898][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:49:20,898][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:49:20,899][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:50:57,782][yaml_util1.py 83][ERROR]: name 'file_path' is not defined
[2024-06-21 19:50:57,787][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:50:57,787][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:50:57,787][yaml_util1.py 83][ERROR]: name 'file_path' is not defined
[2024-06-21 19:50:57,794][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:50:57,795][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:50:57,800][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:50:57,801][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:50:57,815][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 19:50:57,816][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:50:57,835][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:50:57,836][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:50:57,836][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:50:57,836][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:51:02,149][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,171][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,285][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,307][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,341][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,408][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,547][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,558][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,560][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:51:02,564][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:51:02,569][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,578][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,580][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:51:02,585][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:51:02,746][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,755][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,756][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,758][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:51:02,761][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:51:02,771][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,775][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:51:02,782][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:51:02,796][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,809][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,811][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:51:02,814][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:51:02,832][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,844][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,846][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:51:02,850][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:51:02,981][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,984][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,985][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,986][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,988][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:02,991][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,043][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,044][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,045][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,047][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,048][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,049][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,090][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,093][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,095][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:51:03,734][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:03,735][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:03,740][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:03,742][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:03,742][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:03,743][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:03,744][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:03,745][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:03,745][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:03,745][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:03,746][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:03,746][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:03,752][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:03,753][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:03,756][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:03,758][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:03,758][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:03,760][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:03,761][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:03,761][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:03,762][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:03,762][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:03,763][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:03,763][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:03,763][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:03,764][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:03,764][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:03,765][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:03,765][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:03,766][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:03,767][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:03,767][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:03,768][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:03,768][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:03,769][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:03,769][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:03,770][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:03,771][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:03,775][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:03,776][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:03,777][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:03,777][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:03,778][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:03,778][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:03,779][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:03,779][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:03,779][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:03,780][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:03,830][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:03,831][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:03,836][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:03,839][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:03,839][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:03,840][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:03,840][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:03,840][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:03,841][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:03,841][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:03,841][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:03,842][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:13,245][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:13,246][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:13,246][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:13,273][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:13,279][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:13,279][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:13,292][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:13,294][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:13,294][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:13,373][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:13,374][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:13,374][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:13,495][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:13,566][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:13,577][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:13,673][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:13,855][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:13,856][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:13,860][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:13,861][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:13,861][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:13,862][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:13,862][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:13,862][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:13,863][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:13,864][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:13,864][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:13,865][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:13,933][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:13,934][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:13,939][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:13,941][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:13,942][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:13,942][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:13,943][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:13,943][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:13,944][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:13,944][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:13,945][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:13,945][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:13,946][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:13,947][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:13,948][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:13,949][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:13,950][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:13,950][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:13,950][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:13,951][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:13,951][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:13,952][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:13,953][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:13,953][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:14,018][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:14,020][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:14,020][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:14,043][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:14,044][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:14,048][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:14,049][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:14,050][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:14,051][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:14,051][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:14,051][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:14,052][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:14,052][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:14,052][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:14,053][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:14,274][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:14,541][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:51:14,542][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:51:14,547][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:51:14,548][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:51:14,548][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:51:14,549][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:14,549][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:14,549][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:14,550][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:51:14,550][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:14,550][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:14,551][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:16,500][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:16,529][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:16,529][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:16,656][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:16,658][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:16,659][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:16,666][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:16,666][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:16,666][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:16,701][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:16,774][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:16,815][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:17,096][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:17,096][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:17,227][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:17,831][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:51:17,831][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:17,831][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:17,832][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:17,832][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 14.216s"
}
[2024-06-21 19:51:17,832][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:17,832][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:17,832][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:17,835][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:51:17,835][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:17,836][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:17,836][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:17,836][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 14.207s"
}
[2024-06-21 19:51:17,837][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:17,837][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:17,837][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:17,841][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:51:17,841][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:17,842][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:17,842][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:17,842][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 14.232s"
}
[2024-06-21 19:51:17,843][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:17,843][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:17,843][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:17,903][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:51:17,903][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:17,904][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:17,904][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:17,904][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 14.364s"
}
[2024-06-21 19:51:17,904][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:17,904][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:17,904][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:51:23,608][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:51:23,614][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:51:23,614][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:51:23,676][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:51:24,298][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:51:24,298][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:51:24,300][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:51:24,300][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:51:24,300][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 20.718s"
}
[2024-06-21 19:51:24,301][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:51:24,301][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:51:24,301][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:53:15,975][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 19:53:15,975][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 19:53:18,552][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:53:18,692][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:53:18,696][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:53:18,697][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 19:53:18,699][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 19:53:18,851][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:53:18,852][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:53:18,853][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 19:53:19,109][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:53:19,109][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:53:19,111][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:53:19,112][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:53:19,112][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:53:19,112][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:53:19,113][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:53:19,113][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:53:19,113][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:53:19,113][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:53:19,113][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:53:19,113][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:53:25,291][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:53:25,297][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:53:25,299][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:53:25,908][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:53:26,258][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 19:53:26,259][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 19:53:26,261][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 19:53:26,262][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 19:53:26,262][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 19:53:26,263][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:53:26,263][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:53:26,263][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:53:26,264][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 19:53:26,264][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:53:26,264][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:53:26,265][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 19:53:29,170][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 19:53:29,204][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 19:53:29,205][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 19:53:29,268][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 19:53:29,900][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 19:53:29,901][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 19:53:29,906][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 19:53:29,906][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 19:53:29,907][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 10.486s"
}
[2024-06-21 19:53:29,909][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 19:53:29,910][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 19:53:29,912][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 20:18:50,674][yaml_util1.py 81][INFO]: 项目环境：https://aippt.com 已写入setting.ini配置文件.
[2024-06-21 20:18:50,675][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 20:18:53,380][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:18:53,557][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:18:53,564][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:18:53,565][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 20:18:53,567][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 20:18:53,686][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:18:53,687][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:18:53,688][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:18:53,959][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 20:18:53,960][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 20:18:53,963][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 20:18:53,964][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 20:18:53,964][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 20:18:53,964][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 20:18:53,964][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 20:18:53,965][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 20:18:53,965][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 20:18:53,965][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 20:18:53,965][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 20:18:53,965][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 20:18:57,821][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 20:18:57,823][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 20:18:57,823][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 20:18:57,976][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 20:18:58,166][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 20:18:58,166][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 20:18:58,169][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 20:18:58,169][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 20:18:58,170][all_requests.py 52][INFO]: 接口请求地址 ==>> https://aippt.com/captchaImage
[2024-06-21 20:18:58,170][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 20:18:58,170][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 20:18:58,170][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 20:18:58,170][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 20:18:58,170][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 20:18:58,170][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 20:18:58,171][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 20:19:02,468][keyword_request.py 58][INFO]: 请求返回信息 >>> <!DOCTYPE html>
<html lang="en">
  <head>
    <title>AiPPT</title>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    
    <meta name="keywords" content="AiPPT, AI generated PPT, AI optimized PPT, PPT template, intelligent PPT design, personalized PPT template, business PPT, education PPT, innovative PPT design, automatic PPT template generation, PPT online editing, PPT template downloads, high-quality PPT templates, PPT theme color matching">
    <meta name="description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    <meta property="og:title" content="AiPPT - AI Powered Presentation Toolkit with One Click">
    <meta property="og:description" content="With our Design AI , every one of your PowerPoint & Slides will look professionally designed instantly. Start Your Free Trial !">
    

          
    <script type="text/javascript" crossorigin async src="https://at.alicdn.com/t/c/font_4165656_6a9f292qlgt.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/3.3.13.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue-demi/0.14.6.index.iife.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/mammoth.browser.min.js"></script>
          
    <script type="text/javascript" crossorigin  src="https://aippt-international.aippt.com/static/js/vue/pinia-2.1.7.prod.min.js"></script>
          
    <script type="text/javascript" crossorigin async src="https://www.googletagmanager.com/gtag/js?id=G-SYTS3R90L6"></script>
          
    <script type="text/javascript" crossorigin async src="https://api.abotify.com/static/js/track.js"></script>
    

    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments)
      }
      ;window.gtag = gtag;
      ;gtag('js', new Date());

      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : ''
        j.async = true
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, 'script', 'dataLayer', 'GTM-MJ35H5F2');

      // é¼ æ macå®¢æ·ç«¯ç¯å¢ä¸ï¼Backspaceç¦æ­¢é¡µé¢åéå¤ç
      document.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('keydown', function (e) {
          let target = e.target || e.srcElement
          if ((e.key === 'Backspace' || e.keyCode === 8) && target.tagName == 'BODY') {
              e.preventDefault() // é»æ­¢é»è®¤è¡ä¸ºï¼é¡µé¢åéï¼
          }
        })
      })

      
      /** google code */
      ;gtag('config', 'G-SYTS3R90L6')
      ;gtag('config', 'AW-16493675904')
      ;gtag('config', 'AW-16536258117')

      ;gtag('config', 'AW-16591730737')
      ;gtag('config', 'AW-16606873744')


      /** Meta Pixel Code */
      ;!(function (f, b, e, v, n, t, s) {
        if (f.fbq) return
        n = f.fbq = function () {
          n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments)
        }
        if (!f._fbq) f._fbq = n
        n.push = n
        n.loaded = !0
        n.version = '2.0'
        n.queue = []
        t = b.createElement(e)
        t.async = !0
        t.src = v
        s = b.getElementsByTagName(e)[0]
        s.parentNode.insertBefore(t, s)
      })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '445995744430567');
      fbq('track', 'PageView');


      

    </script>

    <script type="module" crossorigin src="/js/index-393cf2fd.js"></script>
    <link rel="modulepreload" crossorigin href="/js/vendor-0af214ff.js">
    <link rel="stylesheet" href="/assets/vendor-f7efeb0b.css">
    <link rel="stylesheet" href="/assets/index-6be24b7c.css">
  </head>

  <body>
    <div id="app"></div>
    

  </body>
</html>

[2024-06-21 20:19:02,470][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 20:19:02,471][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 20:19:02,581][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 20:19:03,301][all_requests.py 52][INFO]: 接口请求地址 ==>> https://sctapi.ftqq.com/SCT124229Tk0tLjdG0HqtmugCoVqbgOnxx.send
[2024-06-21 20:19:03,301][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 20:19:03,302][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 20:19:03,302][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 20:19:03,302][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {
    "title": "自动化测试结果",
    "desp": "用例总数: 1\n 通过： 0\n 失败： 1\n 错误： 0\n 跳过： 0\n 省略： 0\n 重试： 1\n 总运行时间： 8.995s"
}
[2024-06-21 20:19:03,303][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 20:19:03,303][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 20:19:03,303][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 20:19:16,670][yaml_util1.py 81][INFO]: 项目环境：https://chongqing-dmb.gagogroup.cn 已写入setting.ini配置文件.
[2024-06-21 20:19:16,670][flatform.py 209][INFO]: =========================开始运行Pytest测试框架=========================
[2024-06-21 20:19:19,615][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:19,773][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:19,779][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:19,783][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 20:19:19,787][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 20:19:19,900][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:19,901][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:19,901][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:20,183][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 20:19:20,184][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 20:19:20,186][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 20:19:20,186][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 20:19:20,187][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 20:19:20,187][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 20:19:20,187][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 20:19:20,187][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 20:19:20,187][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 20:19:20,188][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 20:19:20,188][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 20:19:20,188][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 20:19:23,358][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"62b75fe7b7d14fe697a26d6f1c697c0a"}
[2024-06-21 20:19:23,361][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 20:19:23,361][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 20:19:23,361][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 20:19:23,361][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "62b75fe7b7d14fe697a26d6f1c697c0a"
}
[2024-06-21 20:19:23,363][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 20:19:23,363][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 20:19:23,369][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
[2024-06-21 20:19:53,422][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:53,557][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:53,561][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:53,562][yaml_util1.py 31][INFO]: 加载 ==>> D:\python_project\Flask代码\untitled1\autotest1\data_file\test_case.yaml文件.....
[2024-06-21 20:19:53,564][yaml_util1.py 34][INFO]: 读到数据 ==>>  {'test_01': [['登录模块', '获取验证码', 'get', '/captchaImage', {}, True, 200, '操作成功']]}
[2024-06-21 20:19:53,653][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:53,654][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:53,655][yaml_util1.py 54][INFO]: 加载 D:\python_project\Flask代码\untitled1\autotest1\config\setting.ini 文件......
[2024-06-21 20:19:53,888][conftest.py 31][INFO]: ~~~~~~~~~~在所有请求之前执行一次~~~~~~~~~~~
[2024-06-21 20:19:53,888][yaml_util1.py 51][INFO]: 重置 /extract_token.yaml文件.......
[2024-06-21 20:19:53,891][test_login.py 35][INFO]: *************** 获取验证码-开始执行用例 ***************
[2024-06-21 20:19:53,893][yaml_util1.py 27][INFO]: 读到token ==>>  None
[2024-06-21 20:19:53,893][all_requests.py 52][INFO]: 接口请求地址 ==>> https://chongqing-dmb.gagogroup.cn/captchaImage
[2024-06-21 20:19:53,893][all_requests.py 53][INFO]: 接口请求方式 ==>> get
[2024-06-21 20:19:53,894][all_requests.py 55][INFO]: 接口请求头 ==>> null
[2024-06-21 20:19:53,894][all_requests.py 56][INFO]: 接口请求 params 参数 ==>> null
[2024-06-21 20:19:53,894][all_requests.py 57][INFO]: 接口请求体 data 参数 ==>> {}
[2024-06-21 20:19:53,894][all_requests.py 58][INFO]: 接口请求体 json 参数 ==>> null
[2024-06-21 20:19:53,895][all_requests.py 59][INFO]: 接口上传附件 files 参数 ==>> None
[2024-06-21 20:19:53,895][all_requests.py 60][INFO]: 接口 cookies 参数 ==>> null
[2024-06-21 20:19:56,408][keyword_request.py 58][INFO]: 请求返回信息 >>> {"msg":"操作成功","img":"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","code":200,"uuid":"684bd69121d54569b9b4b4c295843178"}
[2024-06-21 20:19:56,408][keyword_request.py 62][INFO]: resulr.data数据为:True
[2024-06-21 20:19:56,408][keyword_request.py 64][INFO]: 获取验证码 ==>> 返回状态码为 >> 200
[2024-06-21 20:19:56,408][test_login.py 37][INFO]: 状态码 ==>> 期望结果：200， 实际结果：【 200 】
[2024-06-21 20:19:56,409][test_login.py 42][INFO]: {
  "code": 200,
  "img": "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",
  "msg": "\u64cd\u4f5c\u6210\u529f",
  "uuid": "684bd69121d54569b9b4b4c295843178"
}
[2024-06-21 20:19:56,411][test_login.py 43][INFO]: except_result数据为：操作成功
[2024-06-21 20:19:56,412][test_login.py 46][INFO]: *************** 获取验证码-结束执行用例 ***************
[2024-06-21 20:19:56,419][conftest.py 34][INFO]: ~~~~~~~~~~在所有请求之后执行一次~~~~~~~~~~~
